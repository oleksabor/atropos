// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: UsageLog.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Atropos.Common.Dto {

  /// <summary>Holder for reflection information generated from UsageLog.proto</summary>
  public static partial class UsageLogReflection {

    #region Descriptor
    /// <summary>File descriptor for UsageLog.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static UsageLogReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5Vc2FnZUxvZy5wcm90bxISQXRyb3Bvcy5Db21tb24uRHRvImIKCFVzYWdl",
            "TG9nEgoKAmlkGAEgASgFEg4KBnVzZXJJZBgCIAEoBRIRCgl1c2VkVmFsdWUY",
            "AyABKAMSFAoMc3RhcnRlZFZhbHVlGAQgASgDEhEKCWRhdGVWYWx1ZRgFIAEo",
            "A2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Atropos.Common.Dto.UsageLog), global::Atropos.Common.Dto.UsageLog.Parser, new[]{ "Id", "UserId", "UsedValue", "StartedValue", "DateValue" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class UsageLog : pb::IMessage<UsageLog> {
    private static readonly pb::MessageParser<UsageLog> _parser = new pb::MessageParser<UsageLog>(() => new UsageLog());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UsageLog> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Atropos.Common.Dto.UsageLogReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UsageLog() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UsageLog(UsageLog other) : this() {
      id_ = other.id_;
      userId_ = other.userId_;
      usedValue_ = other.usedValue_;
      startedValue_ = other.startedValue_;
      dateValue_ = other.dateValue_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UsageLog Clone() {
      return new UsageLog(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 2;
    private int userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "usedValue" field.</summary>
    public const int UsedValueFieldNumber = 3;
    private long usedValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UsedValue {
      get { return usedValue_; }
      set {
        usedValue_ = value;
      }
    }

    /// <summary>Field number for the "startedValue" field.</summary>
    public const int StartedValueFieldNumber = 4;
    private long startedValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long StartedValue {
      get { return startedValue_; }
      set {
        startedValue_ = value;
      }
    }

    /// <summary>Field number for the "dateValue" field.</summary>
    public const int DateValueFieldNumber = 5;
    private long dateValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long DateValue {
      get { return dateValue_; }
      set {
        dateValue_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UsageLog);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UsageLog other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (UserId != other.UserId) return false;
      if (UsedValue != other.UsedValue) return false;
      if (StartedValue != other.StartedValue) return false;
      if (DateValue != other.DateValue) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (UsedValue != 0L) hash ^= UsedValue.GetHashCode();
      if (StartedValue != 0L) hash ^= StartedValue.GetHashCode();
      if (DateValue != 0L) hash ^= DateValue.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (UserId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UserId);
      }
      if (UsedValue != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(UsedValue);
      }
      if (StartedValue != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(StartedValue);
      }
      if (DateValue != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(DateValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (UserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
      }
      if (UsedValue != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UsedValue);
      }
      if (StartedValue != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartedValue);
      }
      if (DateValue != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DateValue);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UsageLog other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      if (other.UsedValue != 0L) {
        UsedValue = other.UsedValue;
      }
      if (other.StartedValue != 0L) {
        StartedValue = other.StartedValue;
      }
      if (other.DateValue != 0L) {
        DateValue = other.DateValue;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            UserId = input.ReadInt32();
            break;
          }
          case 24: {
            UsedValue = input.ReadInt64();
            break;
          }
          case 32: {
            StartedValue = input.ReadInt64();
            break;
          }
          case 40: {
            DateValue = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
